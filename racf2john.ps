param (
    [Parameter(Mandatory = $true)]
    [string]$InputFile,

    [Parameter(Mandatory = $false)]
    [string]$OutputFile
)

# EBCDIC to ASCII table
$e2a = @(0,1,2,3,156,9,134,127,151,141,142,11,12,13,14,15,
16,17,18,19,157,133,8,135,24,25,146,143,28,29,30,31,
128,129,130,131,132,10,23,27,136,137,138,139,140,5,6,7,
144,145,22,147,148,149,150,4,152,153,154,155,20,21,158,26,
32,160,161,162,163,164,165,166,167,168,91,46,60,40,43,33,
38,169,170,171,172,173,174,175,176,177,93,36,42,41,59,94,
45,47,178,179,180,181,182,183,184,185,124,44,37,95,62,63,
186,187,188,189,190,191,192,193,194,96,58,35,64,39,61,34,
195,97,98,99,100,101,102,103,104,105,196,197,198,199,200,201,
202,106,107,108,109,110,111,112,113,114,203,204,205,206,207,208,
209,126,115,116,117,118,119,120,121,122,210,211,212,213,214,215,
216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,
123,65,66,67,68,69,70,71,72,73,232,233,234,235,236,237,
125,74,75,76,77,78,79,80,81,82,238,239,240,241,242,243,
92,159,83,84,85,86,87,88,89,90,244,245,246,247,248,249,
48,49,50,51,52,53,54,55,56,57,250,251,252,253,254,255)

function Convert-UserId {
    param([byte[]]$bytes)
    $result = ""
    foreach ($b in $bytes) {
        if ($b -eq 0x02) { break }
        $result += [char]$e2a[$b]
    }
    return $result
}

function To-HexString {
    param([byte[]]$bytes)
    return ($bytes | ForEach-Object { $_.ToString("X2") }) -join ''
}

function Process-RACFFile {
    param([string]$Path)

    $buffer = [System.IO.File]::ReadAllBytes($Path)
    $results = @()

    for ($i = 7; $i -lt $buffer.Length - 62; $i++) {
        if (
            $buffer[$i-7..$i] -ceq @(0xc2, 0xc1, 0xe2, 0xc5, 0x40, 0x40, 0x40, 0x40) -and
            $buffer[$i+1] -eq 0 -and
            $buffer[$i+2] -lt 9 -and
            $buffer[$i+3] -eq 0
        ) {
            $offset = $buffer[$i+2]
            if (
                ($i + $offset + 53) -lt $buffer.Length -and
                $buffer[$i + $offset + 44] -eq 8 -and
                $buffer[$i + $offset + 53] -eq 0x0D
            ) {
                $j = $i + 4
                $useridBytes = New-Object System.Collections.Generic.List[byte]
                while ($buffer[$j] -ne 0x02 -and $useridBytes.Count -lt 9) {
                    $useridBytes.Add($buffer[$j])
                    $j++
                }

                $userid = Convert-UserId -bytes $useridBytes.ToArray()
                $hashBytes = $buffer[($i + $offset + 45)..($i + $offset + 52)]
                $hashHex = To-HexString -bytes $hashBytes
                $results += "$userid`:$racf`*$userid`*$hashHex"
            }
        }
    }

    return $results
}

# Process and output
$lines = Process-RACFFile -Path $InputFile

if ($OutputFile) {
    $lines | Out-File -Encoding ASCII -FilePath $OutputFile
} else {
    $lines | ForEach-Object { Write-Host $_ }
}

